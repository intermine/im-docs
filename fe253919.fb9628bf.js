(window.webpackJsonp=window.webpackJsonp||[]).push([[472],{543:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(3),i=n(7),a=(n(0),n(549)),o={title:"List analysis"},p={unversionedId:"webapp/lists/list-analysis/index",id:"version-4.0.0/webapp/lists/list-analysis/index",isDocsHomePage:!1,title:"List analysis",description:"fields displayed",source:"@site/versioned_docs/version-4.0.0/webapp/lists/list-analysis/index.md",slug:"/webapp/lists/list-analysis/index",permalink:"/im-docs/docs/4.0.0/webapp/lists/list-analysis/index",editUrl:"https://github.com/intermine/im-docs/edit/master/versioned_docs/version-4.0.0/webapp/lists/list-analysis/index.md",version:"4.0.0",sidebar:"version-4.0.0/someSidebar",previous:{title:"List upgrade",permalink:"/im-docs/docs/4.0.0/webapp/lists/list-upgrade"},next:{title:"List Widgets",permalink:"/im-docs/docs/4.0.0/embedding/list-widgets/index"}},s=[],c={toc:s};function l(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"fields displayed")),Object(a.b)("p",null,"determined by webconfig-model.xml"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"export")),Object(a.b)("p",null,"See ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/im-docs/docs/4.0.0/webapp/query-results/export"}),"Export")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},'"Convert to a different type"')),Object(a.b)("p",null,"Tag conversion template with ",Object(a.b)("inlineCode",{parentName:"p"},"im:converter"),' tag. A "Conversion" template has to connect two data classes and include the id field, e.g.'),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'<template name="Gene_To_Protein_Type_Converter" title="Gene to protein type converter" comment="">\n    <query name="Gene_To_Protein_Type_Converter" model="genomic" view="Gene.id Gene.proteins.id" longDescription="" sortOrder="Gene.id asc">\n            <constraint path="Gene.id" editable="true" description="Gene.id" op="=" value="0"/>\n    </query>\n</template>\n')),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},'"Orthologues"')),Object(a.b)("p",null,"If you have orthologues loaded in your mine, you will see links in this section"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},'"View homologues in other Mines"')),Object(a.b)("p",null,"See ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/im-docs/docs/4.0.0/webapp/properties/web-properties"}),"Features")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"external links")),Object(a.b)("p",null,"See ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/im-docs/docs/4.0.0/webapp/properties/web-properties"}),"Features")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"template queries")),Object(a.b)("p",null,"Tag template with the ",Object(a.b)("inlineCode",{parentName:"p"},"im:report")," tag. See ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/im-docs/docs/4.0.0/webapp/admin/index"}),"Website Admin"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"widgets")),Object(a.b)("p",null,"See: ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/im-docs/docs/4.0.0/embedding/list-widgets/index"}),"List Widgets")))}l.isMDXComponent=!0},549:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),l=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},b=function(e){var t=l(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=l(n),u=r,m=b["".concat(o,".").concat(u)]||b[u]||d[u]||a;return n?i.a.createElement(m,p(p({ref:t},c),{},{components:n})):i.a.createElement(m,p({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var c=2;c<a;c++)o[c]=n[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);