(window.webpackJsonp=window.webpackJsonp||[]).push([[436],{507:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return p})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return b}));var r=a(3),n=a(7),o=(a(0),a(547)),i={title:"UniProt"},p={unversionedId:"database/data-sources/library/proteins/uniprot",id:"version-5.0.0/database/data-sources/library/proteins/uniprot",isDocsHomePage:!1,title:"UniProt",description:"Types of data loaded",source:"@site/versioned_docs/version-5.0.0/database/data-sources/library/proteins/uniprot.md",slug:"/database/data-sources/library/proteins/uniprot",permalink:"/im-docs/docs/database/data-sources/library/proteins/uniprot",editUrl:"https://github.com/intermine/im-docs/edit/master/versioned_docs/version-5.0.0/database/data-sources/library/proteins/uniprot.md",version:"5.0.0",sidebar:"version-5.0.0/someSidebar",previous:{title:"Reactome",permalink:"/im-docs/docs/database/data-sources/library/pathways/reactome"},next:{title:"InterPro",permalink:"/im-docs/docs/database/data-sources/library/proteins/interpro"}},c=[{value:"Types of data loaded",id:"types-of-data-loaded",children:[]},{value:"How to download the data",id:"how-to-download-the-data",children:[]},{value:"How to load the data into your mine",id:"how-to-load-the-data-into-your-mine",children:[{value:"Configuration",id:"configuration",children:[]},{value:"Project.xml",id:"projectxml",children:[]}]},{value:"FASTA",id:"fasta",children:[]},{value:"UniProt keywords",id:"uniprot-keywords",children:[]}],l={toc:c};function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"types-of-data-loaded"},"Types of data loaded"),Object(o.b)("p",null,"genes, proteins, GO annotation, protein domains, publications, UniProt features, comments, synonyms, cross references, EC numbers, components"),Object(o.b)("h2",{id:"how-to-download-the-data"},"How to download the data"),Object(o.b)("p",null,"This source loads data from the UniProt website here: ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"ftp://ftp.uniprot.org/pub/databases/uniprot/current_release"}),"ftp://ftp.uniprot.org/pub/databases/uniprot/current","_","release")),Object(o.b)("p",null,"The UniProt source expects the data files to be in a special format:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"TAXONID_uniprot_sprot.xml\nTAXONID_uniprot_trembl.xml\n")),Object(o.b)("p",null,"To download a single taxon, you can use this URL:"),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.uniprot.org/uniprot/?format=xml&query=taxonomy%3A9606+AND+reviewed%3Ayes&compress=yes"}),"http://www.uniprot.org/uniprot/?format=xml&query=taxonomy%3A9606+AND+reviewed%3Ayes&compress=yes")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"parameter"),Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"value"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"taxonomy"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"e.g. 9606 for human")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"reviewed"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"yes for swiss prot, no for trembl")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"compress"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"if yes, zipped")))),Object(o.b)("h2",{id:"how-to-load-the-data-into-your-mine"},"How to load the data into your mine"),Object(o.b)("h3",{id:"configuration"},"Configuration"),Object(o.b)("h4",{id:"gene-identifier-fields"},"Gene identifier fields"),Object(o.b)("p",null,"You can specify which gene fields are assigned when UniProt data is loaded. An example entry:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"10116.uniqueField = primaryIdentifier\n10116.primaryIdentifier.dbref = RGD\n10116.secondaryIdentifier.dbref = Ensembl\n10116.symbol.name = primary\n")),Object(o.b)("p",null,"The format for the file is:"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"<TAXONID>.<IDENTIFIER_FIELD> = <VALUE>")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"An example")),Object(o.b)("p",null,"A rat uniprot entry: ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.uniprot.org/uniprot/Q923K9.xml"}),"http://www.uniprot.org/uniprot/Q923K9.xml")),Object(o.b)("p",null,"The second line of that configuration would set the ID value as the gene.primaryIdentifier:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'<dbReference type="RGD" id="619834" key="33">\n    <property type="gene designation" value="Acf"/>\n</dbReference>\n')),Object(o.b)("p",null,"The third line would set this ID value as gene.secondaryIdentifier:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'<dbReference type="Ensembl" id="ENSRNOG00000033195" key="30">\n    <property type="organism name" value="Rattus norvegicus"/>\n</dbReference>\n')),Object(o.b)("p",null,"The last line would set the value between the ","<","name/",">"," tags as gene.symbol:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'<gene>\n    <name type="primary">A1cf</name>\n    <name type="synonym">Acf</name>\n    <name type="synonym">Asp</name>\n</gene>\n')),Object(o.b)("p",null,"The values for symbol.name can be primary, ORF or ordered locus."),Object(o.b)("h4",{id:"protein-feature-types"},"Protein feature types"),Object(o.b)("p",null,"You can also configure which protein features to load."),Object(o.b)("p",null,"To load specific feature types only, specify them like so:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"# in uniprot_config.properties\nfeature.types = helix\n")),Object(o.b)("p",null,"To load NO feature types:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"# in uniprot_config.properties\nfeature.types = NONE\n")),Object(o.b)("p",null,"To load ALL feature types, do not specify any feature types, remove that line from this config file. Loading all feature types is the default behaviour."),Object(o.b)("h3",{id:"projectxml"},"Project.xml"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'<source name="uniprot" type="uniprot" >\n  <property name="uniprot.organisms" value="7227 9606"/>\n  <property name="src.data.dir" location="/data/uniprot"/>\n  <property name="creatego" value="true"/>\n  <property name="creategenes" value="true"/>\n  <property name="allowduplicates" value="false"/>\n  <property name="loadfragments" value="false"/>\n  <property name="loadtrembl" value="true"/>\n</source>\n')),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"property"),Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"description"),Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"default"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"creategenes"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"if TRUE, process genes"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"true")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"creatego"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"if TRUE, process GO annotation"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"false")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"allowduplicates"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"if TRUE, allow proteins with duplicate sequences to be processed"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"false")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"loadfragments"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"if TRUE, load all proteins even if isFragment = true"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"false")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"loadtrembl"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"if FALSE, not load trembl data for given organisms, load sprot data only"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"true")))),Object(o.b)("h2",{id:"fasta"},"FASTA"),Object(o.b)("p",null,"This source loads FASTA data for isoforms. The UniProt entry is does not contain the sequences for isoforms. ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/uniprot_sprot_varsplic.fasta.gz"}),"ftp://ftp.uniprot.org/pub/databases/uniprot/current","_","release/uniprot","_","sprot","_","varsplic.fasta.gz")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'<source name="uniprot-fasta" type="fasta">\n  <property name="fasta.taxonId" value="7227 9606"/>\n  <property name="fasta.className" value="org.intermine.model.bio.Protein"/>\n  <property name="fasta.classAttribute" value="primaryAccession"/>\n  <property name="fasta.dataSetTitle" value="UniProt data set"/>\n  <property name="fasta.dataSourceName" value="UniProt"/>\n  <property name="src.data.dir" location="/data/uniprot/current"/>\n  <property name="fasta.includes" value="uniprot_sprot_varsplic.fasta"/>\n  <property name="fasta.sequenceType" value="protein" />\n  <property name="fasta.loaderClassName" value="org.intermine.bio.dataconversion.UniProtFastaLoaderTask"/>\n</source>\n')),Object(o.b)("h2",{id:"uniprot-keywords"},"UniProt keywords"),Object(o.b)("p",null,"Loads the names for the UniProt keywords contained in the main UniProt converter. ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/docs"}),"ftp://ftp.uniprot.org/pub/databases/uniprot/current","_","release/knowledgebase/complete/docs")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'<source name="uniprot-keywords" type="uniprot-keywords">\n  <property name="src.data.dir" location="/data/uniprot/current"/>\n  <property name="src.data.dir.includes" value="keywlist.xml"/>\n</source>\n')))}b.isMDXComponent=!0},547:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=n.a.createContext({}),b=function(e){var t=n.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=b(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=b(a),d=r,m=s["".concat(i,".").concat(d)]||s[d]||u[d]||o;return a?n.a.createElement(m,p(p({ref:t},l),{},{components:a})):n.a.createElement(m,p({ref:t},l))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<o;l++)i[l]=a[l];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);