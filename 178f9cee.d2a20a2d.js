(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{112:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return l}));var n=a(3),r=a(7),i=(a(0),a(549)),o={title:"Project XML"},s={unversionedId:"database/database-building/project-xml",id:"version-4.0.0/database/database-building/project-xml",isDocsHomePage:!1,title:"Project XML",description:"This document describes the InterMine project XML file. This file is located in the mine directory and determines:",source:"@site/versioned_docs/version-4.0.0/database/database-building/project-xml.md",slug:"/database/database-building/project-xml",permalink:"/im-docs/docs/4.0.0/database/database-building/project-xml",editUrl:"https://github.com/intermine/im-docs/edit/master/versioned_docs/version-4.0.0/database/database-building/project-xml.md",version:"4.0.0",sidebar:"version-4.0.0/someSidebar",previous:{title:"project_build script",permalink:"/im-docs/docs/4.0.0/database/database-building/build-script"},next:{title:"Data Integration",permalink:"/im-docs/docs/4.0.0/database/database-building/data-integration"}},c=[{value:"&lt;sources&gt;",id:"sources",children:[]},{value:"&lt;post-processing&gt;",id:"post-processing",children:[]},{value:"Versions",id:"versions",children:[]},{value:"Data model",id:"data-model",children:[]},{value:"Examples",id:"examples",children:[]}],d={toc:c};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This document describes the InterMine project XML file. This file is located in the mine directory and determines:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"the Mine's data model"),Object(i.b)("li",{parentName:"ul"},"which data sources are loaded during a build")),Object(i.b)("p",null,"The project XML file has two sections:"),Object(i.b)("h2",{id:"sources"},"<","sources",">"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"<source>")," elements list and configure the data sources to be loaded, each one has a ",Object(i.b)("inlineCode",{parentName:"p"},"type")," that corresponds to the name of the bio-source artifact ","(","jar",")"," which includes parsers to retrieve data and information on how it will be integrated. The ",Object(i.b)("inlineCode",{parentName:"p"},"name")," can be anything and can be the same as ",Object(i.b)("inlineCode",{parentName:"p"},"type"),", using a more specific name allows you to define specific integration keys. Each source also has a ",Object(i.b)("inlineCode",{parentName:"p"},"version"),". If one is not provided, the default InterMine version will be used."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"<source>")," elements can have several properties: ",Object(i.b)("inlineCode",{parentName:"p"},"src.data.dir"),", ",Object(i.b)("inlineCode",{parentName:"p"},"src.data.file")," and ",Object(i.b)("inlineCode",{parentName:"p"},"src.data.includes")," . They are all used to define locations of files that the source should load. Different parser types accept different properties, see the two links below for the full list and example project XML entries."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"For details on the project XML specific data sources, see the individual sources page at ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/im-docs/docs/4.0.0/database/data-sources/library/index"}),"Data Source Library")),Object(i.b)("li",{parentName:"ul"},"For details on how to write a project XML for a custom source, see ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/im-docs/docs/4.0.0/database/data-sources/custom/index"}),"Writing your own data source"))),Object(i.b)("h2",{id:"post-processing"},"<","post-processing",">"),Object(i.b)("p",null,"Specific operations can be performed on the Mine once data is loaded, these are listed here as ",Object(i.b)("inlineCode",{parentName:"p"},"<post-process>")," elements. For details on which postprocesses are available, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/im-docs/docs/4.0.0/database/database-building/post-processing/index"}),"Post processing")),Object(i.b)("h2",{id:"versions"},"Versions"),Object(i.b)("p",null,"Each data source has its own version. See ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/im-docs/docs/4.0.0/database/data-sources/custom/dataparser-versions"}),"Data Source Versions")," for details on how to version your own data sources and how to specify which versions to use."),Object(i.b)("h2",{id:"data-model"},"Data model"),Object(i.b)("p",null,'The data model is generated by iterating though each project listed in the project XML file and retrieving its additions.xml file. This file is then merged into the other additions files. There is also an optional "Global" additions file, see ',Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/im-docs/docs/4.0.0/database/database-building/model-merging"}),"Model Merging")," for details."),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("p",null,"For an example project XML file, see Biotestmine's ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/intermine/biotestmine/blob/master/data/project.xml"}),"project.xml")," file."))}l.isMDXComponent=!0},549:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=r.a.createContext({}),l=function(e){var t=r.a.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=l(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(a),u=n,m=p["".concat(o,".").concat(u)]||p[u]||b[u]||i;return a?r.a.createElement(m,s(s({ref:t},d),{},{components:a})):r.a.createElement(m,s({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var d=2;d<i;d++)o[d]=a[d];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);