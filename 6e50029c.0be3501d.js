(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{283:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return b}));var r=a(3),n=a(7),o=(a(0),a(547)),i={title:"GFF3"},l={unversionedId:"database/data-sources/library/gff",id:"version-5.0.0/database/data-sources/library/gff",isDocsHomePage:!1,title:"GFF3",description:"InterMine comes with a GFF parser which loads GFF3 data files into your mine - without writing any Perl or Java code. This isn't a source itself but genome annotation from gff files can be loaded easily by creating a new source of type gff. See redfly, malaria-gff and tiffin for examples.",source:"@site/versioned_docs/version-5.0.0/database/data-sources/library/gff.md",slug:"/database/data-sources/library/gff",permalink:"/im-docs/docs/database/data-sources/library/gff",editUrl:"https://github.com/intermine/im-docs/edit/master/versioned_docs/version-5.0.0/database/data-sources/library/gff.md",version:"5.0.0",sidebar:"version-5.0.0/someSidebar",previous:{title:"FASTA",permalink:"/im-docs/docs/database/data-sources/library/fasta"},next:{title:"Identifier Data Sources",permalink:"/im-docs/docs/database/data-sources/library/identifiers/index"}},c=[{value:"Types of data loaded",id:"types-of-data-loaded",children:[]},{value:"How to download the data",id:"how-to-download-the-data",children:[]},{value:"How to load the data into your mine",id:"how-to-load-the-data-into-your-mine",children:[{value:"Configuration File",id:"configuration-file",children:[]},{value:"Parent relationship",id:"parent-relationship",children:[]},{value:"Make Source script",id:"make-source-script",children:[]},{value:"Java code",id:"java-code",children:[]}]}],s={toc:c};function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"InterMine comes with a GFF parser which loads GFF3 data files into your mine - without writing any Perl or Java code. This isn't a source itself but genome annotation from gff files can be loaded easily by creating a new source of type gff. See redfly, malaria-gff and tiffin for examples."),Object(o.b)("p",null,"Configuration is added to the ",Object(o.b)("inlineCode",{parentName:"p"},"project.properties")," file and an optional handler can be added to deal with data in the attributes section of the gff file."),Object(o.b)("h2",{id:"types-of-data-loaded"},"Types of data loaded"),Object(o.b)("p",null,"sequence features"),Object(o.b)("h2",{id:"how-to-download-the-data"},"How to download the data"),Object(o.b)("p",null,"N/A - will parse any file in GFF3 format"),Object(o.b)("h2",{id:"how-to-load-the-data-into-your-mine"},"How to load the data into your mine"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Place valid GFF3 files into a directory"),Object(o.b)("li",{parentName:"ol"},"Add entry to project XML file"),Object(o.b)("li",{parentName:"ol"},"Run build")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"# example GFF3 file\nMAL1    ApiDB   gene    183057  184457  .       -       .       ID=gene.46311;description=hypothetical%20protein;Name=PFA0210c\nMAL1    ApiDB   mRNA    183057  184457  .       +       .       ID=mRNA.46312;Parent=gene.46311\n")),Object(o.b)("p",null,"If you follow the above steps with this data file, the following will happen:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"gene and mRNA objects created"),Object(o.b)("li",{parentName:"ol"},'"MAL1" will be the identifier'),Object(o.b)("li",{parentName:"ol"},"start = 183057, end = 184457"),Object(o.b)("li",{parentName:"ol"},"gene will be located in -1 strand, mRNA will be located on the 1 strand.")),Object(o.b)("h3",{id:"configuration-file"},"Configuration File"),Object(o.b)("p",null,'By default, columns such as "type", "start", "end", "strand" and "ID" field in "attributes" column are parsed automatically. To do more processing or access the attributes, you are able to configure in ',Object(o.b)("inlineCode",{parentName:"p"},"gff_config.properties"),". This file should live in your mine's ",Object(o.b)("inlineCode",{parentName:"p"},"dbmodel/resources")," directory."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"# gff_config.properties example for E. coil gff3 attributes\n511145.terms=gene,exon                             # feature types to load, e.g. load gene and exon for E. coli\n511145.excludes=CDS                                # comma-separated list of feature types to exclude from load\n511145.gene.attributes.Dbxref.EcoGene=primaryIdentifier # use Dbxref EcoGene field as primaryIdentifier\n511145.gene.attributes.locus_tag=secondaryIdentifier    # use locus_tag field as secondaryIdentifier\n511145.attributes.gene=symbol                      # use gene field as symbol\n511145.attributes.gene_synonym=synonym             # use gene_synonym field for synonym\n511145.exon.attributes.type=scoreType              # a class specific attribute\n")),Object(o.b)("p",null,"For more advanced processing, you will have to write your own GFF3 parser."),Object(o.b)("h3",{id:"parent-relationship"},"Parent relationship"),Object(o.b)("p",null,"The parent-child relationship between features can also be handled automatically if you set it up properly. Take MalariaGFF3RecordHandler for example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'public MalariaGFF3RecordHandler(Model tgtModel) {\n    super(tgtModel);\n    // refsAndCollections controls references and collections that are set from the\n    // Parent= attributes in the GFF3 file.\n    refsAndCollections.put("Exon", "transcripts");\n    refsAndCollections.put("MRNA", "gene");\n}\n')),Object(o.b)("h4",{id:"project-xml"},"Project XML"),Object(o.b)("p",null,"Here is an example GFF3 entry in the project XML file:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'# add to project.xml file\n# NOTE: update the "type" if you are using your own custom GFF3 parser\n\n<source name="example-gff3" type="gff">\n  <property name="gff3.taxonId" value="9606"/>\n  <property name="gff3.seqClsName" value="Chromosome"/>\n  <property name="src.data.dir" location="/DATA/*.gff3"/>\n  <property name="gff3.dataSourceName" value="NCBI"/>\n  <property name="gff3.dataSetTitle" value="Release GRCh38 of the Homo sapiens genome sequence"/>\n  \x3c!-- add licence here --\x3e\n  <property name="gff3.licence" value="https://creativecommons.org/licenses/by-sa/3.0/" />\n</source>\n')),Object(o.b)("p",null,"Here are the descriptions of the properties available:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"property"),Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"example definition"),Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:"left"})))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gff3.seqClsName"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"Chromosome"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"the ids in the first column represent Chromosome objects, e.g. MAL1")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gff3.taxonId"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"36329"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"taxon id")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gff3.dataSourceName"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"PlasmoDB"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"the data source for features and their identifiers, this is used for the DataSet ","(","evidence",")"," and synonyms.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gff3.seqDataSourceName"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"PlasmoDB"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"the source of the seqids ","(","chromosomes",")"," is sometimes different to the features described")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gff3.dataSetTitle"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"PlasmoDB P. falciparum genome"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"a DataSet object is created as evidence for the features, it is linked to a DataSource ","(","PlasmoDB",")")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gff3.licence"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(o.b)("a",Object(r.a)({parentName:"td"},{href:"https://creativecommons.org/licenses/by-sa/3.0/"}),"https://creativecommons.org/licenses/by-sa/3.0/")),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"URL to a standard data licence")))),Object(o.b)("h4",{id:"writing-a-custom-gff-parser"},"Writing a custom GFF parser"),Object(o.b)("p",null,"You can extend the generic parser by writing your own Java code to process the GFF3 data."),Object(o.b)("h3",{id:"make-source-script"},"Make Source script"),Object(o.b)("p",null,"Create your custom source by running the create source script:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ ./bio/scripts/make_source mouse-cdna gff\ncreated /home/USER_NAME/git/bio/sources/mouse-cdna directory for mouse-cdna\n")),Object(o.b)("p",null,"The script has created a new source for you in the ",Object(o.b)("inlineCode",{parentName:"p"},"bio/sources")," directory."),Object(o.b)("h3",{id:"java-code"},"Java code"),Object(o.b)("p",null,"The Java file you now want to edit is here: ",Object(o.b)("inlineCode",{parentName:"p"},"bio/sources/SOURCE_NAME/main/src/org/intermine/bio/dataconversion")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"process()")," method is called for every line of GFF3 file","(","s",")"," being read. Features and their locations are already created but not stored so you can make changes here. Attributes from the last column of the file are available in a map with the attribute name as the key. For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'Item feature = getFeature();\nString symbol = record.getAttributes().get("symbol");\nfeature.setAttribute("symbol", symbol);\n')),Object(o.b)("p",null,"Any new Items created can be stored by calling addItem","(",")",". For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'String geneIdentifier = record.getAttributes().get("gene");\ngene = createItem("Gene");\ngene.setAttribute("primaryIdentifier", geneIdentifier);\naddItem(gene);\n')),Object(o.b)("p",null,"You should make sure that new Items you create are unique, i.e. by storing in a map by some identifier."),Object(o.b)("p",null,"It may be helpful to look at current GFF3 parsers:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"LongOligoGFF3RecordHandler.java")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"MirandaGFF3RecordHandler.java")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"RedFlyGFF3RecordHandler.java")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"FlyRegGFF3RecordHandler.java")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"DrosDelGFF3RecordHandler.java"))),Object(o.b)("p",null,"See ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/im-docs/docs/get-started/tutorial/index"}),"Tutorial")," for more information on how to run a GFF source."))}b.isMDXComponent=!0},547:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return f}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=n.a.createContext({}),b=function(e){var t=n.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=b(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=b(a),u=r,f=d["".concat(i,".").concat(u)]||d[u]||p[u]||o;return a?n.a.createElement(f,l(l({ref:t},s),{},{components:a})):n.a.createElement(f,l({ref:t},s))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);