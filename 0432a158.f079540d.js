(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{549:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return r?a.a.createElement(m,s(s({ref:t},l),{},{components:r})):a.a.createElement(m,s({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},72:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(7),o=(r(0),r(549)),i={title:"Solr"},s={unversionedId:"system-requirements/software/solr",id:"version-5.0.0/system-requirements/software/solr",isDocsHomePage:!1,title:"Solr",description:'InterMine uses Solr for its keyword search. Now the first search is instant, you can inspect the search index directly \\(via http8983/solr/\\) and there\'s a facet web service \\(via /service/facet-list and /service/facets?q=gene\\). Certain bugs, e.g. searching for the gene "OR", are also now fixed.',source:"@site/versioned_docs/version-5.0.0/system-requirements/software/solr.md",slug:"/system-requirements/software/solr",permalink:"/im-docs/docs/system-requirements/software/solr",editUrl:"https://github.com/intermine/im-docs/edit/master/versioned_docs/version-5.0.0/system-requirements/software/solr.md",version:"5.0.0",sidebar:"version-5.0.0/someSidebar",previous:{title:"Mac Installation Notes",permalink:"/im-docs/docs/system-requirements/software/macs"},next:{title:"Gradle - Quick Start",permalink:"/im-docs/docs/system-requirements/software/gradle/index"}},c=[{value:"Configure the InterMine instance",id:"configure-the-intermine-instance",children:[]},{value:"Install SOLR",id:"install-solr",children:[]},{value:"Initialising Search Indexes",id:"initialising-search-indexes",children:[]},{value:"Create Search Indexes",id:"create-search-indexes",children:[]},{value:"Configuring Search Results",id:"configuring-search-results",children:[]},{value:"Production search",id:"production-search",children:[]}],l={toc:c};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"InterMine uses Solr for its keyword search. Now the first search is instant, you can inspect the search index directly ","(","via ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://localhost:8983/solr/"}),"http://localhost:8983/solr/"),")"," and there's a facet web service ","(","via ",Object(o.b)("inlineCode",{parentName:"p"},"/service/facet-list")," and ",Object(o.b)("inlineCode",{parentName:"p"},"/service/facets?q=gene"),")",'. Certain bugs, e.g. searching for the gene "OR", are also now fixed.'),Object(o.b)("p",null,"See below for how to install and configure Solr search for your InterMine"),Object(o.b)("h2",{id:"configure-the-intermine-instance"},"Configure the InterMine instance"),Object(o.b)("p",null,"Configure the search end point"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),'# keyword_search.properties \n# replace "flymine" with your mine\'s name\nindex.solrurl = http://localhost:8983/solr/flymine-search\nindex.batch.size = 1000\n')),Object(o.b)("p",null,"Configure the autocomplete"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),'# objectstoresummary.config.properties\n# replace "flymine" with your mine\'s name\nautocomplete.solrurl = http://localhost:8983/solr/flymine-autocomplete\n')),Object(o.b)("p",null,"Configure XML library"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"# your mine's gradle.properties\nsystemProp.javax.xml.stream.XMLOutputFactory = com.sun.xml.internal.stream.XMLOutputFactoryImpl\n")),Object(o.b)("p",null,"Otherwise the com.ctc.wstx.stax.WstxOutputFactory class is loaded. See ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/intermine/intermine/issues/1889"}),"#","1889")," for details."),Object(o.b)("h2",{id:"install-solr"},"Install SOLR"),Object(o.b)("p",null,"Download ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://archive.apache.org/dist/lucene/solr/7.2.1/"}),"Solr binary package")," and extract it to any place you like. Inside ",Object(o.b)("inlineCode",{parentName:"p"},"/solr-7.2.1")," directory, start the server with this command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# Starts the server instance on port 8983\nsolr-7.2.1 $ ./bin/solr start\n")),Object(o.b)("h2",{id:"initialising-search-indexes"},"Initialising Search Indexes"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note"),"\nBe sure your $GRADLE","_","OPTS parameter is set correctly, so you have enough memory and disk space for the search index."),Object(o.b)("p",null,"To create a Intermine collection for search process, run this command inside the solr directory."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'# Initialises the search index\n# replace "flymine-search" with whatever you configured above in the properties file\nsolr-7.2.1 $ ./bin/solr create -c flymine-search\n')),Object(o.b)("p",null,"To create a Intermine collection for autocomplete process, run this command inside the solr directory."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'# Initaliases the autocomplete index\n# replace "flymine-autocomplete" with whatever you configured above in the properties file\nsolr-7.2.1 $ ./bin/solr create -c flymine-autocomplete\n')),Object(o.b)("h2",{id:"create-search-indexes"},"Create Search Indexes"),Object(o.b)("p",null,"To populate your search index, you'll need to add these postprocesses to your mine's project XML file: ",Object(o.b)("inlineCode",{parentName:"p"},"create-search-index")," and ",Object(o.b)("inlineCode",{parentName:"p"},"create-autocomplete-index"),"."),Object(o.b)("p",null,"See ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/im-docs/docs/database/database-building/project-xml"}),"Project XML")," and ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/im-docs/docs/database/database-building/post-processing/index"}),"Post processing")," for details."),Object(o.b)("h2",{id:"configuring-search-results"},"Configuring Search Results"),Object(o.b)("p",null,"See ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/im-docs/docs/webapp/keyword-search/index"}),"Keyword Search")," for details on how to configure the search results."),Object(o.b)("h2",{id:"production-search"},"Production search"),Object(o.b)("p",null,"You can easily copy your index from your dev to your production server. You can copy the entire ",Object(o.b)("inlineCode",{parentName:"p"},"/solr")," directory then do ",Object(o.b)("inlineCode",{parentName:"p"},"./bin/solr start"),". You can also ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://lucene.apache.org/solr/guide/6_6/making-and-restoring-backups.html"}),"dump / restore the index"),". Be sure to copy the ",Object(o.b)("inlineCode",{parentName:"p"},"managed-schema")," file over as well the first time. Don't forget to restart Solr after making changes."))}p.isMDXComponent=!0}}]);