(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{316:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),o=(n(0),n(547)),i={title:"Querying over genomic ranges"},c={unversionedId:"data-model/overlaps",id:"data-model/overlaps",isDocsHomePage:!1,title:"Querying over genomic ranges",description:"InterMine includes functionality for querying features with overlapping genome coordinates. We have an index that is created on the Location table. This is used by a 'virtual' SequenceFeature.overlappingFeatures collection that is a view in the postgres database using the native Postgres index to find other features that overlap it.",source:"@site/docs/data-model/overlaps.md",slug:"/data-model/overlaps",permalink:"/im-docs/docs/next/data-model/overlaps",editUrl:"https://github.com/intermine/im-docs/edit/master/docs/data-model/overlaps.md",version:"current",sidebar:"someSidebar",previous:{title:"The PathQuery API",permalink:"/im-docs/docs/next/api/pathquery"},next:{title:"Decorating your model with ontologies",permalink:"/im-docs/docs/next/data-model/model-ontologies"}},p=[{value:"Create the index",id:"create-the-index",children:[]},{value:"Create the overlappingFeatures view",id:"create-the-overlappingfeatures-view",children:[]}],s={toc:p};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"InterMine includes functionality for querying features with overlapping genome coordinates. We have an index that is created on the ",Object(o.b)("inlineCode",{parentName:"p"},"Location")," table. This is used by a 'virtual' ",Object(o.b)("inlineCode",{parentName:"p"},"SequenceFeature.overlappingFeatures")," collection that is a ",Object(o.b)("inlineCode",{parentName:"p"},"view")," in the postgres database using the native ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.postgresql.org/docs/9.5/static/rangetypes.html"}),"Postgres index")," to find other features that overlap it."),Object(o.b)("p",null,"In modMine ","(","the InterMine for the modENCODE project",")",", we also create ",Object(o.b)("inlineCode",{parentName:"p"},"GeneFlankingRegion")," features to represent specific distances upstream and downstream of genes to query for genes that are nearby other features."),Object(o.b)("h2",{id:"create-the-index"},"Create the index"),Object(o.b)("p",null,"You need to create the index on the location table in your production database by adding the ",Object(o.b)("inlineCode",{parentName:"p"},"create-location-range-index")," post-process step to your ",Object(o.b)("inlineCode",{parentName:"p"},"project.xml")," file like so:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'<post-process name="create-location-range-index"/>\n')),Object(o.b)("h2",{id:"create-the-overlappingfeatures-view"},"Create the overlappingFeatures view"),Object(o.b)("p",null,"Create the ",Object(o.b)("inlineCode",{parentName:"p"},"SequenceFeature.overlappingFeatures")," view in the database. This allows you to query for any features that overlap any other types of features in the web interface or query API. Add the ",Object(o.b)("inlineCode",{parentName:"p"},"create-overlap-view")," post-process step, which needs to be located ",Object(o.b)("strong",{parentName:"p"},"after")," ",Object(o.b)("inlineCode",{parentName:"p"},"create-location-range-index")," in your project XML file."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-markup"}),'<post-process name="create-overlap-view" />\n')),Object(o.b)("p",null,"Now any queries on the ",Object(o.b)("inlineCode",{parentName:"p"},"overlappingFeatures")," collections will use this view and the new index."))}l.isMDXComponent=!0},547:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),l=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(n),b=r,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return n?a.a.createElement(m,c(c({ref:t},s),{},{components:n})):a.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);