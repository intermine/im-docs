(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{361:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return c}));var r=n(3),a=n(7),i=(n(0),n(547)),o={title:"Linking in to your mine"},l={unversionedId:"webapp/linking-in/index",id:"version-4.0.0/webapp/linking-in/index",isDocsHomePage:!1,title:"Linking in to your mine",description:"This page aims to describe the various ways to link to a Mine.",source:"@site/versioned_docs/version-4.0.0/webapp/linking-in/index.md",slug:"/webapp/linking-in/index",permalink:"/im-docs/docs/4.0.0/webapp/linking-in/index",editUrl:"https://github.com/intermine/im-docs/edit/master/versioned_docs/version-4.0.0/webapp/linking-in/index.md",version:"4.0.0",sidebar:"version-4.0.0/someSidebar",previous:{title:"Help",permalink:"/im-docs/docs/4.0.0/webapp/help/index"},next:{title:"How to set up your InterMine webapp to use https",permalink:"/im-docs/docs/4.0.0/webapp/https"}},s=[{value:"Link directly to query results",id:"link-directly-to-query-results",children:[{value:"Template name",id:"template-name",children:[]},{value:"Query XML",id:"query-xml",children:[]}]},{value:"Link to List Analysis page",id:"link-to-list-analysis-page",children:[{value:"Template results",id:"template-results",children:[]},{value:"List of Identifiers",id:"list-of-identifiers",children:[]}]},{value:"Query builder",id:"query-builder",children:[]},{value:"Report page",id:"report-page",children:[]},{value:"Link into Mine with Orthologues",id:"link-into-mine-with-orthologues",children:[]},{value:"Convert any identifiers to Genes",id:"convert-any-identifiers-to-genes",children:[]},{value:"More examples",id:"more-examples",children:[]}],p={toc:s};function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This page aims to describe the various ways to link to a Mine."),Object(i.b)("h2",{id:"link-directly-to-query-results"},"Link directly to query results"),Object(i.b)("h3",{id:"template-name"},"Template name"),Object(i.b)("p",null,"Links to results of specified template. URL is generated on template form in webapp."),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.flymine.org/query/loadTemplate.do?name=Chromosome_Gene&constraint1=Gene.chromosome.primaryIdentifier&op1=eq&value1=2L&constraint2=Gene.organism.name&op2=eq&value2=Drosophila+melanogaster&method=results"}),"http://www.flymine.org/query/loadTemplate.do?name=Chromosome","_","Gene&constraint1=Gene.chromosome.primaryIdentifier&op1=eq&value1=2L&constraint2=Gene.organism.name&op2=eq&value2=Drosophila+melanogaster&method=results")),Object(i.b)("p",null,"Make sure to include ",Object(i.b)("inlineCode",{parentName:"p"},"&method=results")," at the end of the query string."),Object(i.b)("h3",{id:"query-xml"},"Query XML"),Object(i.b)("p",null,"Links to results of query. It can run any query built by QueryBuilder; QueryBuilder generates the XML."),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.flymine.org/query/loadQuery.do?skipBuilder=true&query=%0A%3Cquery+name%3D%22%22+model%3D%22genomic%22+view%3D%22Gene.primaryIdentifier+Gene.secondaryIdentifier+Gene.goAnnotation.ontologyTerm.name+Gene.goAnnotation.ontologyTerm.identifier+Gene.goAnnotation.ontologyTerm.namespace%22+sortOrder%3D%22Gene.primaryIdentifier+asc%22%3E%0A++%3Cconstraint+path%3D%22Gene.organism.shortName%22+op%3D%22%3D%22+value%3D%22A.+gambiae%22%2F%3E%0A%3C%2Fquery%3E%0A&trail=%7Cquery&method=xml"}),"http://www.flymine.org/query/loadQuery.do?skipBuilder=true&query=%0A%3Cquery+name%3D%22%22+model%3D%22genomic%22+view%3D%22Gene.primaryIdentifier+Gene.secondaryIdentifier+Gene.goAnnotation.ontologyTerm.name+Gene.goAnnotation.ontologyTerm.identifier+Gene.goAnnotation.ontologyTerm.namespace%22+sortOrder%3D%22Gene.primaryIdentifier+asc%22%3E%0A++%3Cconstraint+path%3D%22Gene.organism.shortName%22+op%3D%22%3D%22+value%3D%22A.+gambiae%22%2F%3E%0A%3C%2Fquery%3E%0A&trail=%7Cquery&method=xml")),Object(i.b)("h2",{id:"link-to-list-analysis-page"},"Link to List Analysis page"),Object(i.b)("h3",{id:"template-results"},"Template results"),Object(i.b)("p",null,'Links to list analysis page comprised of results of template query. "path" attribute determines which column is used to create list. URL is available on template form in webapp.'),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.flymine.org/query/loadTemplate.do?name=Pathway_Genes&constraint1=Pathway.name&op1=eq&value1=Pentose+phosphate+pathway&constraint2=Pathway.genes.organism.name&op2=eq&value2=Drosophila+melanogaster&constraint3=Pathway.dataSets.name&op3=eq&value3=KEGG+pathways+data+set&method=list&path=Pathway.genes"}),"http://www.flymine.org/query/loadTemplate.do?name=Pathway","_","Genes&constraint1=Pathway.name&op1=eq&value1=Pentose+phosphate+pathway&constraint2=Pathway.genes.organism.name&op2=eq&value2=Drosophila+melanogaster&constraint3=Pathway.dataSets.name&op3=eq&value3=KEGG+pathways+data+set&method=list&path=Pathway.genes")),Object(i.b)("h3",{id:"list-of-identifiers"},"List of Identifiers"),Object(i.b)("p",null,"Links to list analysis page for specified objects. For a very long list, use a form instead of a link. It can use any identifiers."),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.flymine.org/query/portal.do?externalids=CG2262,CG3069,CG2859,CG5041,FBgn0036513&class=Gene"}),"http://www.flymine.org/query/portal.do?externalids=CG2262,CG3069,CG2859,CG5041,FBgn0036513&class=Gene")),Object(i.b)("h2",{id:"query-builder"},"Query builder"),Object(i.b)("p",null,"Links directly to query builder, starts a query using the provided list."),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://beta.flymine.org/beta/loadQuery.do?name=copy&method=list"}),"http://beta.flymine.org/beta/loadQuery.do?name=copy&method=list")),Object(i.b)("h2",{id:"report-page"},"Report page"),Object(i.b)("p",null,"Links directly to report page. URL available on report page in webapp."),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.humanmine.org/humanmine/portal.do?externalids=pparg&class=Gene&origin=readthedocs"}),"http://www.humanmine.org/humanmine/portal.do?externalids=pparg&class=Gene&origin=readthedocs")),Object(i.b)("p",null,"Optionally, add ",Object(i.b)("inlineCode",{parentName:"p"},"extraVlue")," parameter with the organism name, e.g.:"),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.humanmine.org/humanmine/portal.do?externalids=pparg&class=Gene&extraValue=H.+sapiens"}),"http://www.humanmine.org/humanmine/portal.do?externalids=pparg&class=Gene&extraValue=H.+sapiens")),Object(i.b)("h2",{id:"link-into-mine-with-orthologues"},"Link into Mine with Orthologues"),Object(i.b)("p",null,"The example URL contains ''D. melanogaster'' genes. The results will contain the corresponding ''C. elegans'' genes, if any. This will only work if you have orthologue data loaded into your Mine. It will forward to report page OR list analysis page."),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.flymine.org/query/portal.do?externalids=CG2262,CG3069,CG2859,CG5041,FBgn0036513&class=Gene&orthologue=C.%20elegans"}),"http://www.flymine.org/query/portal.do?externalids=CG2262,CG3069,CG2859,CG5041,FBgn0036513&class=Gene&orthologue=C.%20elegans")),Object(i.b)("h2",{id:"convert-any-identifiers-to-genes"},"Convert any identifiers to Genes"),Object(i.b)("p",null,"When linking to a report page or a list analysis page you can convert the data type, for instance, if you provide a Protein identifier and want to link to the corresponding Gene, you need to specify the class as Gene. It will only work if you have a converter template available"),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://www.flymine.org/query/portal.do?externalid=EVE_DROME&class=Gene"}),"http://www.flymine.org/query/portal.do?externalid=EVE","_","DROME&class=Gene")),Object(i.b)("h2",{id:"more-examples"},"More examples"),Object(i.b)("p",null,"See FlyMine for more examples: ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://intermineorg.wordpress.com/flymine/link-to-flymine/"}),"https://intermineorg.wordpress.com/flymine/link-to-flymine/")))}c.isMDXComponent=!0},547:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return y}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),c=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,y=u["".concat(o,".").concat(d)]||u[d]||m[d]||i;return n?a.a.createElement(y,l(l({ref:t},p),{},{components:n})):a.a.createElement(y,l({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);